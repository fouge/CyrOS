Summary
------------------

1 - How does an x86 machine boot ?
2 - Real Mode

A - Sources

-----
| 1 | How does an x86 machine boot ?
-----

The x86 CPU is hardwired to begin execution at the physical address [0xFFFFFFF0]. It is in fact, the last 16 bytes of the 32-bit address space. This address just contains a jump instruction to the address in memory where BIOS has copied itself.

Thus, the BIOS code starts its execution.  BIOS first searches for a bootable device in the configured boot device order. It checks for a certain magic number to determine if the device is bootable or not.

Once the BIOS has found a bootable device, it copies the contents of the deviceâ€™s first sector into RAM starting from physical address [0x7c00]; and then jumps into the address and executes the code just loaded. This code is called the bootloader.

The bootloader then loads the kernel at the physical address [0x100000] (1MiB). The address [0x100000] is used as the start-address for all big kernels on x86 machines.


-----
| 2 | Real Mode
-----

Real Mode is a simplistic 16-bit mode that is present on all x86 processors. Mainly used before entering Protected Mode (it's possible to swith to RMode when in PMode however).
Easy access to BIOS resources and functions. Therefore it's a good place to perform memory map detection, detection of available video modes, loading of additional files, etc. The boot loader will collect this information and present it in a way the kernel will be able to understand.
In Real Mode, there is a little over 1 MB of "addressable" memory. You can access physical memory addresses from 0x100000 to 0x10FFEF. This (almost 64 kB) area above 1 MB is called the "High Memory Area" in Real Mode. Note that you have to have the A20 address line activated for this to work.
No virtual memory. Segment registers can be used but with difficulty.

http://wiki.osdev.org/Real_Mode

-----
| A | Sources
-----

http://wiki.osdev.org/
http://arjunsreedharan.org/post/82710718100/kernel-101-lets-write-a-kernel?utm_medium=referral&utm_source=t.co